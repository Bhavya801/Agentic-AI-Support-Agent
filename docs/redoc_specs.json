{
  "openapi": "3.0.0",
  "info": {
    "title": "AI-Powered Customer Support Agent",
    "description": "This is an automated system that reads incoming customer support emails, analyzes them using a large language model, and takes an action (reply or escalate). The system runs as a scheduled cron job and interacts with external services like Trello and Firebase. This documentation describes the overall process and the data models involved.",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://api.example.com",
      "description": "Conceptual API endpoint (cron job)"
    }
  ],
  "tags": [
    {
      "name": "Cron Job",
      "description": "The automated process that runs on a schedule."
    }
  ],
  "paths": {
    "/process-emails": {
      "post": {
        "tags": [
          "Cron Job"
        ],
        "summary": "Process incoming emails",
        "description": "This operation is triggered by a cron job and performs the entire workflow of fetching emails, analyzing them with AI, and taking an action.",
        "operationId": "processEmails",
        "requestBody": {
          "description": "The process is triggered without an external request body. All configuration is handled via environment variables.",
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "trigger": {
                    "type": "string",
                    "example": "cron-trigger"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The process ran successfully. Details of the action taken (replied, escalated) are logged to the console and Firebase.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully processed 2 new emails."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/process-emails-schedule": {
      "get": {
        "tags": [
          "Cron Job"
        ],
        "summary": "Scheduler Information",
        "description": "Provides information about the cron-like schedule that triggers the email processing job.",
        "responses": {
          "200": {
            "description": "Scheduler information retrieved successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "job_name": {
                      "type": "string",
                      "example": "Process Emails"
                    },
                    "schedule": {
                      "type": "string",
                      "example": "Runs every 5 minutes"
                    },
                    "trigger_type": {
                      "type": "string",
                      "example": "CronTrigger"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AIResponse": {
        "type": "object",
        "description": "The JSON object returned by the AI model.",
        "properties": {
          "action": {
            "type": "string",
            "description": "The action the agent should take.",
            "enum": [
              "reply",
              "escalate"
            ]
          },
          "response_text": {
            "type": "string",
            "description": "The text for the customer reply or a summary for the human agent."
          },
          "classification": {
            "type": "string",
            "description": "The category of the support query."
          }
        }
      },
      "SupportTicket": {
        "type": "object",
        "description": "The data model for a support ticket logged to Firestore.",
        "properties": {
          "from": {
            "type": "string",
            "description": "The email address of the sender."
          },
          "subject": {
            "type": "string",
            "description": "The subject of the email."
          },
          "body": {
            "type": "string",
            "description": "The full body of the email."
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "The time the email was processed."
          },
          "ai_action": {
            "type": "string",
            "description": "The action decided by the AI."
          },
          "ai_classification": {
            "type": "string",
            "description": "The classification assigned by the AI."
          },
          "ai_response_text": {
            "type": "string",
            "description": "The response or summary text from the AI."
          }
        }
      }
    }
  }
}
